void LuaCEmbedTable_append_string(LuaCEmbedTable *self, const char *value);
void LuaCEmbedTable_append_long(LuaCEmbedTable *self, lua_Integer value);
void LuaCEmbedTable_append_double(LuaCEmbedTable *self, double value);
void LuaCEmbedTable_append_bool(LuaCEmbedTable *self, bool value);
void LuaCEmbedTable_append_table(LuaCEmbedTable *self, LuaCEmbedTable *table);
void LuaCEmbedTable_append_evaluation(LuaCEmbedTable *self, const char *code, ...);
void LuaCEmbedTable_insert_string_at_index(LuaCEmbedTable *self, lua_Integer index, const char *value);
void LuaCEmbedTable_insert_bool_at_index(LuaCEmbedTable *self, lua_Integer index, bool value);
void LuaCEmbedTable_insert_long_at_index(LuaCEmbedTable *self, lua_Integer index, lua_Integer value);
void LuaCEmbedTable_insert_double_at_index(LuaCEmbedTable *self, lua_Integer index, double value);
void LuaCEmbedTable_insert_table_at_index(LuaCEmbedTable *self, lua_Integer index, LuaCEmbedTable *table);
void LuaCEmbedTable_set_evaluation_prop(LuaCEmbedTable *self, const char *name, const char *code, ...);
void LuaCEmbedTable_set_method(LuaCEmbedTable *self, const char *name, LuaCEmbedResponse *(*callback)(LuaCEmbedTable *self, LuaCEmbed *args));
void LuaCEmbedTable_set_bool_prop(LuaCEmbedTable *self, const char *name, bool value);
void LuaCEmbedTable_set_double_prop(LuaCEmbedTable *self, const char *name, double value);
void LuaCEmbedTable_set_long_prop(LuaCEmbedTable *self, const char *name, lua_Integer value);
void LuaCEmbedTable_set_string_prop(LuaCEmbedTable *self, const char *name, const char *value);
void LuaCEmbedTable_set_raw_string_prop(LuaCEmbedTable *self, const char *name, const char *value, lua_Integer size);
LuaCEmbedTable * LuaCEmbedTable_get_sub_table_by_key(LuaCEmbedTable *self, const char *name);
LuaCEmbedTable * LuaCEmbedTable_new_sub_table_by_key(LuaCEmbedTable *self, const char *name);
void LuaCEmbedTable_set_sub_table_prop(LuaCEmbedTable *self, const char *name, LuaCEmbedTable *sub_table);
LuaCEmbedTable * LuaCembed_new_anonymous_table(LuaCEmbed *self);
void LuaCEmbedTable_set_sub_table_by_index(LuaCEmbedTable *self, lua_Integer index, LuaCEmbedTable *sub_table);
bool LuaCembedTable_get_bool_prop(LuaCEmbedTable *self, const char *name);
double LuaCembedTable_get_double_prop(LuaCEmbedTable *self, const char *name);
lua_Integer LuaCembedTable_get_long_prop(LuaCEmbedTable *self, const char *name);
char* LuaCembedTable_get_string_prop(LuaCEmbedTable *self, const char *name);
char* LuaCembedTable_get_raw_string_prop(LuaCEmbedTable *self, const char *name, lua_Integer *size);
int LuaCEmbedTable_get_type_prop(LuaCEmbedTable *self, const char *name);
void LuaCembedTable_destroy_prop(LuaCEmbedTable *self, const char *name);
void LuaCEmbedTable_set_long_by_index(LuaCEmbedTable *self, lua_Integer index, lua_Integer value);
void LuaCEmbedTable_set_bool_by_index(LuaCEmbedTable *self, lua_Integer index, bool value);
void LuaCEmbedTable_set_double_by_index(LuaCEmbedTable *self, lua_Integer index, double value);
void LuaCEmbedTable_set_string_by_index(LuaCEmbedTable *self, lua_Integer index, const char *value);
void LuaCEmbedTable_set_raw_string_by_index(LuaCEmbedTable *self, lua_Integer index, const char *value, lua_Integer size);
void LuaCEmbedTable_set_evaluation_by_index(LuaCEmbedTable *self, lua_Integer index, const char *code, ...);
lua_Integer LuaCEmbedTable_get_listable_size(LuaCEmbedTable *self);
LuaCEmbedTable * LuaCEmbedTable_new_sub_table_appending(LuaCEmbedTable *self);
bool LuaCembedTable_has_key_at_index(LuaCEmbedTable *self, lua_Integer index);
char * LuaCembedTable_get_key_by_index(LuaCEmbedTable *self, lua_Integer index);
lua_Integer LuaCEmbedTable_get_full_size(LuaCEmbedTable *self);
int LuaCEmbedTable_get_type_by_index(LuaCEmbedTable *self, lua_Integer index);
lua_Integer LuaCEmbedTable_get_long_by_index(LuaCEmbedTable *self, lua_Integer index);
double LuaCEmbedTable_get_double_by_index(LuaCEmbedTable *self, lua_Integer index);
bool LuaCEmbedTable_get_bool_by_index(LuaCEmbedTable *self, lua_Integer index);
char * LuaCEmbedTable_get_string_by_index(LuaCEmbedTable *self, lua_Integer index);
char * LuaCEmbedTable_get_raw_string_by_index(LuaCEmbedTable *self, lua_Integer index, lua_Integer *size);
LuaCEmbedTable * LuaCEmbedTable_get_sub_table_by_index(LuaCEmbedTable *self, lua_Integer index);